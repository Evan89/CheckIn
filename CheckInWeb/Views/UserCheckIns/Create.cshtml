@model CheckInCommon.UserCheckIn

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - SafetyLine</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jqueryval")
    <script src="../../Scripts/jquery.timepicker.js" language="javascript" type="text/javascript"></script>
    <script src="../../Scripts/jquery.timepicker.min.js" language="javascript" type="text/javascript"></script>
    <link href="../../Content/jquery.timepicker.css" rel="stylesheet" type="text/css" />
</head>
<body>
    <br>
    <div class="col-md-12"><img class="img-responsive" src="https://safetylineloneworker.com/wp-content/uploads/2016/10/SafetyLine-Logo-no-loneWorker.png" /></div>
    <br>

    @using (Html.BeginForm("Create", "UserCheckIns", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.firstName, "First Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.lastName, "Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.telNum, "Telephone Number", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.telNum, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.telNum, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.email, "Email Address", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.contactEmail1, "Contact Email Address", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.contactEmail1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.contactEmail1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.contactEmail2, "Additional Contact Email Address", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.contactEmail2, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.contactEmail3, "Additional Contact Email Address", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.contactEmail3, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.contactEmail4, "Additional Contact Email Address", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.contactEmail4, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.location, "Location", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.location, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.location, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.returnTime, "Return Time", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.inputTime, new { htmlAttributes = new { @class = "form-control select-time ", required = "required", @readonly = "readonly" } })*@
                    <input id="select-time" type="text" class="form-control select-time" name="inputTime" onkeydown="return false" required="required"  runat="server"/>
                    <input id="offset" type="hidden" name="offsetName" runat="server" />
                    <script>
                        var offset = new Date().getTimezoneOffset();
                        
                        
                        var now = new Date();

                        var sss = now.getFullYear() + "-" + (now.getMonth() + 1) + "-" + now.getDate() + "-"
                                + now.getHours() + "-" + now.getMinutes() + "-" + offset;

                        document.getElementById("offset").value = sss;

                       

                        var mins = now.getMinutes();
                        var quarterHours = Math.round(mins / 15);
                        if (quarterHours == 4) {
                            now.setHours(now.getHours() + 1);
                        }
                        var rounded = (quarterHours * 15) % 60;
                        now.setMinutes(rounded);
                        //$('.select-time').timepicker({
                        //    'timeFormat': 'h:mm p',
                        //    'interval': 15,
                        //    'minTime': start,
                        //    'maxTime': '11:45pm',
                        //    'dynamic': false,
                        //    'dropdown': true,
                        //    'scrollbar': true,
                        //    'showDuration': true
                        //});
                        $('#select-time').timepicker({
                            'minTime': now,
                            'step': 15,
                            //'maxTime': '11:30pm',
                            'showDuration': true
                        });
                    </script>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.message, "Message", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.message, new { htmlAttributes = new { @class = "form-control ", rows = 5 } })
                    @Html.ValidationMessageFor(model => model.message, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @Html.CheckBoxFor(model => model.subscribe, new { htmlAttributes = new { @class = "form-control " } })
                    <span>Subscribe to our newsletter!</span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Submit" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("French Version", "French")
    </div>

</body>
</html>